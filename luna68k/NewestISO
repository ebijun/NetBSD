#! /usr/pkg/bin/ruby31
# $Id: $

require 'net/ftp'

FTP="nyftp.netbsd.org"
CDN="nycdn.netbsd.org"
#FTP="nycdn.netbsd.org"
#FTP="ftp.jp.netbsd.org"
#FTP="ftp7.jp.netbsd.org"

#BRANCH="/pub/NetBSD-daily/HEAD/"
BRANCH="/pub/NetBSD-daily/netbsd-11/"
IMAGES="/usr/release/images/"

ARCH="luna68k"


class ISO
	def initialize(list)
		@iso = list
		@path= nil
	end
	def check(path,arch)
		l = @iso
		while f=l.shift
			if /#{arch}.iso/ =~ f
				@path = path+f
				return path+f
			end
		end
		return nil
	end
	def print
		p @iso
	end
	def path
		return @path
	end
	def date
		return (@path.scan(/[0-9]+Z/))[0]
	end
	def body
		return (@path.scan(/NetBSD-[0-9]+.*.iso/))[0].sub(".iso","")
	end
end

ftp = Net::FTP.open(FTP) do |ftp|
	# login and set mode
	ftp.login()
#	ftp.passive = TRUE
#	ftp.debug_mode = TRUE

	# chdir to branch
	ftp.chdir(BRANCH)

	# Get Daily build list
	list=((ftp.nlst()).select{|s| /^[0-9][0-9][0-9]/ =~ s }).sort

	# Check most recent image
	while s=list.pop
		# is image dir?
		image=BRANCH+s+"/images/"
		begin
			path=ftp.chdir(image)
		rescue Net::FTPPermError
			next
		end

		# is ARCH iso?
		begin
			isofile=ISO.new(ftp.nlst())
			if isofile.check(image,ARCH)
				break
			else
				next
			end
		rescue Net::FTPTempError
			next
		end
	end
	puts "ftp https://"+CDN+isofile.path
	puts "mv "+isofile.body+".iso "+IMAGES+isofile.body+"-"+isofile.date+".iso"
	ftp.quit
end
